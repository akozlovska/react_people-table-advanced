{"version":3,"sources":["components/Navbar.tsx","App.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","utils/searchHelper.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","Navbar","useSearchParams","searchParams","className","role","to","pathname","search","toString","App","HomePage","NotFoundPage","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","allCenturies","PeopleFilters","setSearchParams","sex","get","centuries","getAll","getCenturiesForSearch","century","includes","filter","c","type","placeholder","onChange","e","params","newSearch","setSearchWith","query","target","map","length","Loader","Personlink","person","slug","name","sortLinks","PeopleTable","people","useParams","sort","order","getPersonByName","find","useEffect","selectedPerson","document","querySelector","scrollIntoView","block","behavior","window","scrollTo","top","sortLink","slice","toUpperCase","sortType","mother","motherName","undefined","father","fatherName","born","died","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoadingError","setIsLoadingError","filteredPeople","useMemo","filtered","lowerQuery","toLowerCase","Math","ceil","person1","person2","first","second","localeCompare","getPeople","catch","finally","Root","path","element","index","replace","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.fc2f71c3.chunk.js","sourcesContent":["import { NavLink, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => cn(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const Navbar = () => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">Home</NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to={{ pathname: 'people', search: searchParams.toString() }}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\nconst allCenturies = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  const setSearchWith = (params: SearchParams) => {\n    const newSearch = getSearchWith(searchParams, params);\n\n    setSearchParams(newSearch.toString());\n  };\n\n  const getCenturiesForSearch = (century: string) => {\n    return centuries.includes(century)\n      ? centuries.filter(c => c !== century)\n      : [...centuries, century];\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          to={{ search: getSearchWith(searchParams, { sex: null }) }}\n          className={cn({ 'is-active': !sex })}\n        >\n          All\n        </Link>\n\n        <Link\n          to={{ search: getSearchWith(searchParams, { sex: 'm' }) }}\n          className={cn({ 'is-active': sex === 'm' })}\n        >\n          Male\n        </Link>\n\n        <Link\n          to={{ search: getSearchWith(searchParams, { sex: 'f' }) }}\n          className={cn({ 'is-active': sex === 'f' })}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={(e) => setSearchWith({ query: e.target.value || null })}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {allCenturies.map(century => (\n              <Link\n                key={century}\n                data-cy=\"century\"\n                to={{\n                  search: getSearchWith(searchParams, {\n                    centuries: getCenturiesForSearch(century),\n                  }),\n                }}\n                className={cn('button mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n              >\n                {century}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={cn('button is-success', {\n                'is-outlined': centuries.length > 0,\n              })}\n              to={{\n                search: getSearchWith(searchParams,\n                  { centuries: null }),\n              }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to={{\n            search: getSearchWith(searchParams,\n              { query: null, sex: null, centuries: null }),\n          }}\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const Personlink: React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{ pathname: `../${person.slug}`, search: searchParams.toString() }}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useEffect } from 'react';\nimport { useParams, Link, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { Personlink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nconst sortLinks = ['name', 'sex', 'born', 'died'];\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  function getSearchWithSort(sortType: string) {\n    if (!sort || sort !== sortType) {\n      return getSearchWith(searchParams, { sort: sortType, order: null });\n    }\n\n    if (!order) {\n      return getSearchWith(searchParams, { sort: sortType, order: 'desc' });\n    }\n\n    return getSearchWith(searchParams, { sort: null, order: null });\n  }\n\n  function getPersonByName(name: string) {\n    return people.find(person => person.name === name);\n  }\n\n  useEffect(() => {\n    const selectedPerson = document.querySelector('.has-background-warning');\n\n    if (selectedPerson) {\n      selectedPerson.scrollIntoView({\n        block: 'center',\n        behavior: 'smooth',\n      });\n    } else {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  }, [slug]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {sortLinks.map(sortLink => (\n            <th key={sortLink}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {sortLink.slice(0, 1).toUpperCase() + sortLink.slice(1)}\n\n                <Link\n                  to={{ search: getSearchWithSort(sortLink) }}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={cn('fas', {\n                        'fa-sort': !sort || sort !== sortLink,\n                        'fa-sort-up': sort === sortLink && !order,\n                        'fa-sort-down': sort === sortLink && order,\n                      })}\n                    />\n                  </span>\n                </Link>\n              </span>\n            </th>\n          ))}\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const mother = person.motherName\n            ? getPersonByName(person.motherName)\n            : undefined;\n          const father = person.fatherName\n            ? getPersonByName(person.fatherName)\n            : undefined;\n\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={cn({\n                'has-background-warning': person.slug === slug,\n              })}\n            >\n              <td>\n                <Personlink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.motherName ? (\n                  <>\n                    {mother ? (\n                      <Personlink\n                        person={mother}\n                      />\n                    ) : (\n                      <>\n                        {person.motherName}\n                      </>\n                    )}\n                  </>\n                ) : (\n                  '-'\n                )}\n              </td>\n              <td>\n                {person.fatherName ? (\n                  <>\n                    {father ? (\n                      <Personlink\n                        person={father}\n                      />\n                    ) : (\n                      <>\n                        {person.fatherName}\n                      </>\n                    )}\n                  </>\n                ) : (\n                  '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from '../PeopleFilters';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  const filteredPeople = useMemo(() => {\n    let filtered = [...people];\n\n    if (query) {\n      const lowerQuery = query.toLowerCase();\n\n      filtered = filtered.filter(\n        person => person.name.toLowerCase().includes(lowerQuery)\n        || person.motherName?.toLowerCase().includes(lowerQuery)\n        || person.fatherName?.toLowerCase().includes(lowerQuery),\n      );\n    }\n\n    if (sex) {\n      filtered = filtered.filter(person => person.sex === sex);\n    }\n\n    if (centuries.length) {\n      filtered = filtered.filter(person => centuries.includes(\n        Math.ceil(person.born / 100).toString(),\n      ));\n    }\n\n    if (sort) {\n      filtered = [...filtered].sort((person1, person2) => {\n        const first = order ? person1 : person2;\n        const second = order ? person2 : person1;\n\n        switch (sort) {\n          case 'name':\n            return second.name.localeCompare(first.name);\n\n          case 'sex':\n            return second.sex.localeCompare(first.sex);\n\n          case 'born':\n            return +second.born - +first.born;\n\n          case 'died':\n            return +second.died - +first.died;\n\n          default:\n            return 0;\n        }\n      });\n    }\n\n    return filtered;\n  }, [query, sex, centuries, sort, order]);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n\n            <div className=\"column\">\n              <div className=\"box table-container\">\n                {isLoadingError ? (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                ) : (\n                  <>\n                    {people.length ? (\n                      <>\n                        {filteredPeople.length ? (\n                          <PeopleTable people={filteredPeople} />\n                        ) : (\n                          <p>\n                            There are no people matching\n                            the current search criteria\n                          </p>\n                        )}\n                      </>\n                    ) : (\n                      <p data-cy=\"noPeopleMessage\">\n                        There are no people on the server\n                      </p>\n                    )}\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}